strict digraph  {
"0 /nncf_model_input_0";
"1 SymmetricQuantizer/symmetric_quantize_0";
"2 OSNet/ConvLayer[conv1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"3 OSNet/ConvLayer[conv1]/NNCFConv2d[conv]/conv2d_0";
"4 OSNet/ConvLayer[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"5 OSNet/ConvLayer[conv1]/ReLU[relu]/relu__0";
"6 OSNet/ConvLayer[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"7 OSNet/MaxPool2d[maxpool]/max_pool2d_0";
"8 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1[conv1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"9 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0";
"10 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"11 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/relu__0";
"12 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"13 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"14 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0";
"15 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"16 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"17 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0";
"18 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/NNCFBatchNorm2d[bn]/batch_norm_0";
"19 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/relu__0";
"20 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"21 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"22 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0";
"23 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"24 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"25 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0";
"26 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"27 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/relu__0";
"28 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"29 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"30 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0";
"31 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"32 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"33 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0";
"34 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"35 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/relu__0";
"36 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"37 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"38 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0";
"39 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"40 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"41 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0";
"42 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"43 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/relu__0";
"44 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"45 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"46 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0";
"47 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"48 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"49 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0";
"50 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"51 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/relu__0";
"52 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"53 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"54 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0";
"55 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"56 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"57 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0";
"58 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0";
"59 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/relu__0";
"60 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"61 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"62 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0";
"63 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"64 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"65 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0";
"66 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"67 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/relu__0";
"68 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"69 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"70 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0";
"71 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"72 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"73 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0";
"74 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"75 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/relu__0";
"76 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"77 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"78 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0";
"79 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"80 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"81 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0";
"82 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0";
"83 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/relu__0";
"84 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"85 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"86 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0";
"87 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"88 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"89 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0";
"90 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFBatchNorm2d[bn]/batch_norm_0";
"91 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/relu__0";
"92 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"93 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0";
"94 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0";
"95 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"96 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0";
"97 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__0";
"98 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"99 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"100 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0";
"101 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_0";
"102 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_0";
"103 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/__mul___0";
"104 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_0";
"105 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_1";
"106 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_1";
"107 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"108 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1";
"109 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__1";
"110 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"111 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"112 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1";
"113 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_1";
"114 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_1";
"115 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/__mul___1";
"116 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_1";
"117 OSNet/Sequential[conv2]/OSBlock[0]/__add___0";
"118 OSNet/Sequential[conv2]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_0";
"119 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_2";
"120 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_2";
"121 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"122 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2";
"123 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__2";
"124 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"125 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"126 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2";
"127 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_2";
"128 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_2";
"129 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/__mul___2";
"130 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_2";
"131 OSNet/Sequential[conv2]/OSBlock[0]/__add___1";
"132 OSNet/Sequential[conv2]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_1";
"133 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_3";
"134 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_3";
"135 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"136 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3";
"137 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__3";
"138 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_3";
"139 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"140 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3";
"141 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_3";
"142 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_3";
"143 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/__mul___3";
"144 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_3";
"145 OSNet/Sequential[conv2]/OSBlock[0]/__add___2";
"146 OSNet/Sequential[conv2]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_2";
"147 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"148 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0";
"149 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/batch_norm_0";
"150 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0";
"151 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"152 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFConv2d[conv]/conv2d_0";
"153 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFBatchNorm2d[bn]/batch_norm_0";
"154 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0";
"155 OSNet/Sequential[conv2]/OSBlock[0]/__add___3";
"156 OSNet/Sequential[conv2]/OSBlock[0]/relu_0";
"157 OSNet/Sequential[conv2]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_3";
"158 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1[conv1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"159 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0";
"160 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"161 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/relu__0";
"162 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"163 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"164 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0";
"165 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"166 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"167 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0";
"168 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/NNCFBatchNorm2d[bn]/batch_norm_0";
"169 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/relu__0";
"170 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"171 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"172 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0";
"173 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"174 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"175 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0";
"176 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"177 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/relu__0";
"178 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"179 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"180 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0";
"181 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"182 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"183 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0";
"184 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"185 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/relu__0";
"186 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"187 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"188 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0";
"189 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"190 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"191 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0";
"192 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"193 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/relu__0";
"194 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"195 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"196 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0";
"197 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"198 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"199 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0";
"200 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"201 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/relu__0";
"202 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"203 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"204 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0";
"205 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"206 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"207 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0";
"208 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0";
"209 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/relu__0";
"210 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"211 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"212 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0";
"213 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"214 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"215 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0";
"216 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"217 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/relu__0";
"218 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"219 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"220 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0";
"221 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"222 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"223 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0";
"224 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"225 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/relu__0";
"226 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"227 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"228 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0";
"229 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"230 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"231 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0";
"232 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0";
"233 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/relu__0";
"234 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"235 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"236 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0";
"237 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"238 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"239 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0";
"240 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFBatchNorm2d[bn]/batch_norm_0";
"241 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/relu__0";
"242 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"243 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0";
"244 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0";
"245 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"246 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0";
"247 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__0";
"248 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"249 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"250 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0";
"251 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_0";
"252 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_0";
"253 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/__mul___0";
"254 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_0";
"255 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_1";
"256 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_1";
"257 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"258 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1";
"259 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__1";
"260 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"261 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"262 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1";
"263 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_1";
"264 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_1";
"265 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/__mul___1";
"266 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_1";
"267 OSNet/Sequential[conv2]/OSBlock[1]/__add___0";
"268 OSNet/Sequential[conv2]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_0";
"269 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_2";
"270 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_2";
"271 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"272 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2";
"273 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__2";
"274 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"275 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"276 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2";
"277 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_2";
"278 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_2";
"279 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/__mul___2";
"280 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_2";
"281 OSNet/Sequential[conv2]/OSBlock[1]/__add___1";
"282 OSNet/Sequential[conv2]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_1";
"283 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_3";
"284 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_3";
"285 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"286 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3";
"287 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__3";
"288 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_3";
"289 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"290 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3";
"291 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_3";
"292 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_3";
"293 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/__mul___3";
"294 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_3";
"295 OSNet/Sequential[conv2]/OSBlock[1]/__add___2";
"296 OSNet/Sequential[conv2]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_2";
"297 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"298 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0";
"299 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/batch_norm_0";
"300 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0";
"301 OSNet/Sequential[conv2]/OSBlock[1]/__add___3";
"302 OSNet/Sequential[conv2]/OSBlock[1]/relu_0";
"303 OSNet/Sequential[conv2]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_3";
"304 OSNet/Sequential[conv2]/Sequential[2]/Conv1x1[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"305 OSNet/Sequential[conv2]/Sequential[2]/Conv1x1[0]/NNCFConv2d[conv]/conv2d_0";
"306 OSNet/Sequential[conv2]/Sequential[2]/Conv1x1[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"307 OSNet/Sequential[conv2]/Sequential[2]/Conv1x1[0]/ReLU[relu]/relu__0";
"308 OSNet/Sequential[conv2]/Sequential[2]/Conv1x1[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"309 OSNet/Sequential[conv2]/Sequential[2]/AvgPool2d[1]/avg_pool2d_0";
"310 OSNet/Sequential[conv2]/Sequential[2]/AvgPool2d[1]/SymmetricQuantizer/symmetric_quantize_0";
"311 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1[conv1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"312 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0";
"313 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"314 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/relu__0";
"315 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"316 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"317 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0";
"318 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"319 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"320 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0";
"321 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/NNCFBatchNorm2d[bn]/batch_norm_0";
"322 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/relu__0";
"323 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"324 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"325 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0";
"326 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"327 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"328 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0";
"329 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"330 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/relu__0";
"331 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"332 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"333 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0";
"334 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"335 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"336 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0";
"337 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"338 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/relu__0";
"339 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"340 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"341 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0";
"342 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"343 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"344 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0";
"345 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"346 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/relu__0";
"347 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"348 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"349 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0";
"350 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"351 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"352 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0";
"353 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"354 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/relu__0";
"355 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"356 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"357 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0";
"358 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"359 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"360 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0";
"361 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0";
"362 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/relu__0";
"363 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"364 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"365 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0";
"366 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"367 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"368 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0";
"369 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"370 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/relu__0";
"371 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"372 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"373 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0";
"374 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"375 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"376 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0";
"377 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"378 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/relu__0";
"379 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"380 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"381 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0";
"382 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"383 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"384 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0";
"385 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0";
"386 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/relu__0";
"387 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"388 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"389 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0";
"390 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"391 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"392 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0";
"393 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFBatchNorm2d[bn]/batch_norm_0";
"394 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/relu__0";
"395 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"396 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0";
"397 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0";
"398 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"399 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0";
"400 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__0";
"401 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"402 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"403 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0";
"404 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_0";
"405 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_0";
"406 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/__mul___0";
"407 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_0";
"408 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_1";
"409 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_1";
"410 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"411 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1";
"412 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__1";
"413 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"414 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"415 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1";
"416 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_1";
"417 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_1";
"418 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/__mul___1";
"419 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_1";
"420 OSNet/Sequential[conv3]/OSBlock[0]/__add___0";
"421 OSNet/Sequential[conv3]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_0";
"422 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_2";
"423 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_2";
"424 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"425 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2";
"426 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__2";
"427 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"428 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"429 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2";
"430 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_2";
"431 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_2";
"432 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/__mul___2";
"433 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_2";
"434 OSNet/Sequential[conv3]/OSBlock[0]/__add___1";
"435 OSNet/Sequential[conv3]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_1";
"436 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_3";
"437 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_3";
"438 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"439 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3";
"440 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__3";
"441 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_3";
"442 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"443 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3";
"444 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_3";
"445 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_3";
"446 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/__mul___3";
"447 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_3";
"448 OSNet/Sequential[conv3]/OSBlock[0]/__add___2";
"449 OSNet/Sequential[conv3]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_2";
"450 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"451 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0";
"452 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/batch_norm_0";
"453 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0";
"454 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"455 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFConv2d[conv]/conv2d_0";
"456 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFBatchNorm2d[bn]/batch_norm_0";
"457 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0";
"458 OSNet/Sequential[conv3]/OSBlock[0]/__add___3";
"459 OSNet/Sequential[conv3]/OSBlock[0]/relu_0";
"460 OSNet/Sequential[conv3]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_3";
"461 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1[conv1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"462 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0";
"463 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"464 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/relu__0";
"465 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"466 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"467 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0";
"468 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"469 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"470 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0";
"471 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/NNCFBatchNorm2d[bn]/batch_norm_0";
"472 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/relu__0";
"473 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"474 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"475 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0";
"476 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"477 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"478 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0";
"479 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"480 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/relu__0";
"481 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"482 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"483 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0";
"484 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"485 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"486 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0";
"487 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"488 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/relu__0";
"489 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"490 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"491 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0";
"492 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"493 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"494 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0";
"495 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"496 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/relu__0";
"497 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"498 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"499 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0";
"500 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"501 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"502 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0";
"503 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"504 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/relu__0";
"505 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"506 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"507 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0";
"508 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"509 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"510 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0";
"511 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0";
"512 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/relu__0";
"513 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"514 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"515 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0";
"516 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"517 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"518 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0";
"519 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"520 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/relu__0";
"521 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"522 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"523 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0";
"524 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"525 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"526 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0";
"527 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"528 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/relu__0";
"529 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"530 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"531 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0";
"532 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"533 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"534 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0";
"535 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0";
"536 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/relu__0";
"537 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"538 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"539 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0";
"540 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"541 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"542 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0";
"543 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFBatchNorm2d[bn]/batch_norm_0";
"544 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/relu__0";
"545 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"546 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0";
"547 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0";
"548 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"549 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0";
"550 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__0";
"551 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"552 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"553 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0";
"554 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_0";
"555 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_0";
"556 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/__mul___0";
"557 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_0";
"558 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_1";
"559 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_1";
"560 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"561 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1";
"562 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__1";
"563 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"564 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"565 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1";
"566 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_1";
"567 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_1";
"568 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/__mul___1";
"569 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_1";
"570 OSNet/Sequential[conv3]/OSBlock[1]/__add___0";
"571 OSNet/Sequential[conv3]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_0";
"572 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_2";
"573 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_2";
"574 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"575 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2";
"576 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__2";
"577 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"578 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"579 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2";
"580 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_2";
"581 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_2";
"582 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/__mul___2";
"583 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_2";
"584 OSNet/Sequential[conv3]/OSBlock[1]/__add___1";
"585 OSNet/Sequential[conv3]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_1";
"586 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_3";
"587 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_3";
"588 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"589 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3";
"590 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__3";
"591 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_3";
"592 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"593 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3";
"594 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_3";
"595 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_3";
"596 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/__mul___3";
"597 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_3";
"598 OSNet/Sequential[conv3]/OSBlock[1]/__add___2";
"599 OSNet/Sequential[conv3]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_2";
"600 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"601 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0";
"602 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/batch_norm_0";
"603 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0";
"604 OSNet/Sequential[conv3]/OSBlock[1]/__add___3";
"605 OSNet/Sequential[conv3]/OSBlock[1]/relu_0";
"606 OSNet/Sequential[conv3]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_3";
"607 OSNet/Sequential[conv3]/Sequential[2]/Conv1x1[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"608 OSNet/Sequential[conv3]/Sequential[2]/Conv1x1[0]/NNCFConv2d[conv]/conv2d_0";
"609 OSNet/Sequential[conv3]/Sequential[2]/Conv1x1[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"610 OSNet/Sequential[conv3]/Sequential[2]/Conv1x1[0]/ReLU[relu]/relu__0";
"611 OSNet/Sequential[conv3]/Sequential[2]/Conv1x1[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"612 OSNet/Sequential[conv3]/Sequential[2]/AvgPool2d[1]/avg_pool2d_0";
"613 OSNet/Sequential[conv3]/Sequential[2]/AvgPool2d[1]/SymmetricQuantizer/symmetric_quantize_0";
"614 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1[conv1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"615 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0";
"616 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"617 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/relu__0";
"618 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"619 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"620 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0";
"621 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"622 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"623 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0";
"624 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/NNCFBatchNorm2d[bn]/batch_norm_0";
"625 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/relu__0";
"626 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"627 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"628 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0";
"629 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"630 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"631 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0";
"632 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"633 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/relu__0";
"634 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"635 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"636 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0";
"637 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"638 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"639 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0";
"640 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"641 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/relu__0";
"642 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"643 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"644 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0";
"645 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"646 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"647 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0";
"648 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"649 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/relu__0";
"650 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"651 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"652 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0";
"653 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"654 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"655 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0";
"656 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"657 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/relu__0";
"658 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"659 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"660 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0";
"661 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"662 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"663 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0";
"664 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0";
"665 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/relu__0";
"666 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"667 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"668 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0";
"669 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"670 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"671 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0";
"672 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"673 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/relu__0";
"674 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"675 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"676 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0";
"677 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"678 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"679 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0";
"680 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"681 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/relu__0";
"682 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"683 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"684 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0";
"685 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"686 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"687 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0";
"688 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0";
"689 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/relu__0";
"690 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"691 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"692 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0";
"693 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"694 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"695 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0";
"696 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFBatchNorm2d[bn]/batch_norm_0";
"697 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/relu__0";
"698 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"699 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0";
"700 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0";
"701 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"702 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0";
"703 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__0";
"704 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"705 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"706 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0";
"707 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_0";
"708 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_0";
"709 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/__mul___0";
"710 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_0";
"711 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_1";
"712 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_1";
"713 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"714 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1";
"715 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__1";
"716 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"717 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"718 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1";
"719 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_1";
"720 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_1";
"721 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/__mul___1";
"722 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_1";
"723 OSNet/Sequential[conv4]/OSBlock[0]/__add___0";
"724 OSNet/Sequential[conv4]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_0";
"725 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_2";
"726 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_2";
"727 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"728 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2";
"729 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__2";
"730 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"731 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"732 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2";
"733 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_2";
"734 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_2";
"735 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/__mul___2";
"736 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_2";
"737 OSNet/Sequential[conv4]/OSBlock[0]/__add___1";
"738 OSNet/Sequential[conv4]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_1";
"739 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_3";
"740 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_3";
"741 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"742 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3";
"743 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__3";
"744 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_3";
"745 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"746 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3";
"747 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_3";
"748 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_3";
"749 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/__mul___3";
"750 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_3";
"751 OSNet/Sequential[conv4]/OSBlock[0]/__add___2";
"752 OSNet/Sequential[conv4]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_2";
"753 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"754 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0";
"755 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/batch_norm_0";
"756 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0";
"757 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"758 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFConv2d[conv]/conv2d_0";
"759 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFBatchNorm2d[bn]/batch_norm_0";
"760 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0";
"761 OSNet/Sequential[conv4]/OSBlock[0]/__add___3";
"762 OSNet/Sequential[conv4]/OSBlock[0]/relu_0";
"763 OSNet/Sequential[conv4]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_3";
"764 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1[conv1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"765 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0";
"766 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"767 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/relu__0";
"768 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"769 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"770 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0";
"771 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"772 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"773 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0";
"774 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/NNCFBatchNorm2d[bn]/batch_norm_0";
"775 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/relu__0";
"776 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"777 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"778 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0";
"779 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"780 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"781 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0";
"782 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"783 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/relu__0";
"784 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"785 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"786 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0";
"787 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"788 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"789 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0";
"790 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"791 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/relu__0";
"792 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"793 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"794 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0";
"795 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"796 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"797 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0";
"798 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"799 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/relu__0";
"800 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"801 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"802 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0";
"803 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"804 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"805 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0";
"806 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"807 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/relu__0";
"808 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"809 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"810 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0";
"811 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"812 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"813 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0";
"814 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0";
"815 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/relu__0";
"816 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"817 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"818 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0";
"819 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"820 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"821 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0";
"822 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0";
"823 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/relu__0";
"824 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"825 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"826 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0";
"827 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"828 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"829 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0";
"830 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0";
"831 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/relu__0";
"832 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"833 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"834 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0";
"835 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"836 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"837 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0";
"838 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0";
"839 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/relu__0";
"840 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"841 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"842 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0";
"843 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0";
"844 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"845 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0";
"846 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFBatchNorm2d[bn]/batch_norm_0";
"847 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/relu__0";
"848 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"849 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0";
"850 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0";
"851 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"852 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0";
"853 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__0";
"854 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"855 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"856 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0";
"857 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_0";
"858 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_0";
"859 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/__mul___0";
"860 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_0";
"861 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_1";
"862 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_1";
"863 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"864 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1";
"865 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__1";
"866 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1";
"867 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1";
"868 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1";
"869 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_1";
"870 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_1";
"871 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/__mul___1";
"872 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_1";
"873 OSNet/Sequential[conv4]/OSBlock[1]/__add___0";
"874 OSNet/Sequential[conv4]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_0";
"875 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_2";
"876 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_2";
"877 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"878 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2";
"879 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__2";
"880 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2";
"881 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2";
"882 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2";
"883 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_2";
"884 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_2";
"885 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/__mul___2";
"886 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_2";
"887 OSNet/Sequential[conv4]/OSBlock[1]/__add___1";
"888 OSNet/Sequential[conv4]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_1";
"889 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_3";
"890 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_3";
"891 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"892 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3";
"893 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__3";
"894 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_3";
"895 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3";
"896 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3";
"897 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_3";
"898 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_3";
"899 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/__mul___3";
"900 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_3";
"901 OSNet/Sequential[conv4]/OSBlock[1]/__add___2";
"902 OSNet/Sequential[conv4]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_2";
"903 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"904 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0";
"905 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/batch_norm_0";
"906 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0";
"907 OSNet/Sequential[conv4]/OSBlock[1]/__add___3";
"908 OSNet/Sequential[conv4]/OSBlock[1]/relu_0";
"909 OSNet/Sequential[conv4]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_3";
"910 OSNet/Conv1x1[conv5]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"911 OSNet/Conv1x1[conv5]/NNCFConv2d[conv]/conv2d_0";
"912 OSNet/Conv1x1[conv5]/NNCFBatchNorm2d[bn]/batch_norm_0";
"913 OSNet/Conv1x1[conv5]/ReLU[relu]/relu__0";
"914 OSNet/Conv1x1[conv5]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0";
"915 OSNet/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0";
"916 OSNet/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0";
"917 OSNet/view_0";
"918 OSNet/Sequential[fc]/NNCFLinear[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0";
"919 OSNet/Sequential[fc]/NNCFLinear[0]/linear_0";
"920 OSNet/Sequential[fc]/NNCFBatchNorm1d[1]/batch_norm_0";
"921 OSNet/Sequential[fc]/ReLU[2]/relu__0";
"922 /nncf_model_output_0";
"0 /nncf_model_input_0" -> "1 SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 3, 256, 128) \n0 -> 0", style=solid];
"1 SymmetricQuantizer/symmetric_quantize_0" -> "3 OSNet/ConvLayer[conv1]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 3, 256, 128) \n0 -> 0", style=solid];
"2 OSNet/ConvLayer[conv1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "3 OSNet/ConvLayer[conv1]/NNCFConv2d[conv]/conv2d_0"  [label="(16, 3, 7, 7) \n0 -> 1", style=solid];
"3 OSNet/ConvLayer[conv1]/NNCFConv2d[conv]/conv2d_0" -> "4 OSNet/ConvLayer[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 128, 64) \n0 -> 0", style=solid];
"4 OSNet/ConvLayer[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "5 OSNet/ConvLayer[conv1]/ReLU[relu]/relu__0"  [label="(6, 16, 128, 64) \n0 -> 0", style=solid];
"5 OSNet/ConvLayer[conv1]/ReLU[relu]/relu__0" -> "6 OSNet/ConvLayer[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 128, 64) \n0 -> 0", style=solid];
"6 OSNet/ConvLayer[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "7 OSNet/MaxPool2d[maxpool]/max_pool2d_0"  [label="(6, 16, 128, 64) \n0 -> 0", style=solid];
"7 OSNet/MaxPool2d[maxpool]/max_pool2d_0" -> "9 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"7 OSNet/MaxPool2d[maxpool]/max_pool2d_0" -> "152 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"8 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1[conv1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "9 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"9 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0" -> "10 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"10 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "11 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"11 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/relu__0" -> "12 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"12 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "14 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"12 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "22 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"12 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "38 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"12 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "62 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"13 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "14 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"14 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0" -> "15 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"15 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "17 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"16 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "17 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"17 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0" -> "18 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"18 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "19 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"19 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/relu__0" -> "20 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"20 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "93 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"20 OSNet/Sequential[conv2]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "103 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/__mul___0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"21 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "22 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"22 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0" -> "23 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"23 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "25 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"24 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "25 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"25 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0" -> "26 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"26 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "27 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"27 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/relu__0" -> "28 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"28 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "30 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"29 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "30 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"30 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0" -> "31 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"31 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "33 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"32 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "33 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"33 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0" -> "34 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"34 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "35 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"35 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/relu__0" -> "36 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"36 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "105 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_1"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"36 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "115 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/__mul___1"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"37 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "38 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"38 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0" -> "39 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"39 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "41 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"40 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "41 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"41 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0" -> "42 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"42 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "43 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"43 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/relu__0" -> "44 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"44 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "46 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"45 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "46 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"46 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0" -> "47 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"47 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "49 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"48 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "49 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"49 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0" -> "50 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"50 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "51 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"51 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/relu__0" -> "52 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"52 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "54 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"53 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "54 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"54 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0" -> "55 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"55 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "57 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"56 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "57 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"57 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0" -> "58 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"58 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "59 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"59 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/relu__0" -> "60 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"60 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "119 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_2"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"60 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "129 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/__mul___2"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"61 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "62 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"62 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0" -> "63 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"63 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "65 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"64 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "65 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"65 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0" -> "66 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"66 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "67 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"67 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/relu__0" -> "68 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"68 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "70 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"69 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "70 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"70 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0" -> "71 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"71 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "73 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"72 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "73 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"73 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0" -> "74 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"74 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "75 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"75 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/relu__0" -> "76 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"76 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "78 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"77 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "78 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"78 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0" -> "79 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"79 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "81 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"80 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "81 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"81 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0" -> "82 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"82 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "83 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"83 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/relu__0" -> "84 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"84 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "86 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"85 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "86 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"86 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0" -> "87 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"87 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "89 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"88 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "89 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"89 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0" -> "90 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"90 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "91 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"91 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/relu__0" -> "92 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"92 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "133 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_3"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"92 OSNet/Sequential[conv2]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "143 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/__mul___3"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"93 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0" -> "94 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"94 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0" -> "96 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"95 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "96 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0"  [label="(1, 16, 1, 1) \n0 -> 1", style=solid];
"96 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0" -> "97 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__0"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"97 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__0" -> "98 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"98 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "100 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"99 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "100 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0"  [label="(16, 1, 1, 1) \n0 -> 1", style=solid];
"100 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0" -> "101 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_0"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"101 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_0" -> "102 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"102 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_0" -> "103 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/__mul___0"  [label="(6, 16, 1, 1) \n0 -> 1", style=solid];
"103 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/__mul___0" -> "104 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"104 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_0" -> "117 OSNet/Sequential[conv2]/OSBlock[0]/__add___0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"105 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_1" -> "106 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"106 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_1" -> "108 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"107 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "108 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1"  [label="(1, 16, 1, 1) \n0 -> 1", style=solid];
"108 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1" -> "109 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__1"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"109 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__1" -> "110 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"110 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "112 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"111 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "112 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1"  [label="(16, 1, 1, 1) \n0 -> 1", style=solid];
"112 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1" -> "113 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_1"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"113 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_1" -> "114 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"114 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_1" -> "115 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/__mul___1"  [label="(6, 16, 1, 1) \n0 -> 1", style=solid];
"115 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/__mul___1" -> "116 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"116 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_1" -> "117 OSNet/Sequential[conv2]/OSBlock[0]/__add___0"  [label="(6, 16, 64, 32) \n0 -> 1", style=solid];
"117 OSNet/Sequential[conv2]/OSBlock[0]/__add___0" -> "118 OSNet/Sequential[conv2]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"118 OSNet/Sequential[conv2]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_0" -> "131 OSNet/Sequential[conv2]/OSBlock[0]/__add___1"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"119 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_2" -> "120 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"120 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_2" -> "122 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"121 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "122 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2"  [label="(1, 16, 1, 1) \n0 -> 1", style=solid];
"122 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2" -> "123 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__2"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"123 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__2" -> "124 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"124 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "126 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"125 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "126 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2"  [label="(16, 1, 1, 1) \n0 -> 1", style=solid];
"126 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2" -> "127 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_2"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"127 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_2" -> "128 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"128 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_2" -> "129 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/__mul___2"  [label="(6, 16, 1, 1) \n0 -> 1", style=solid];
"129 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/__mul___2" -> "130 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"130 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_2" -> "131 OSNet/Sequential[conv2]/OSBlock[0]/__add___1"  [label="(6, 16, 64, 32) \n0 -> 1", style=solid];
"131 OSNet/Sequential[conv2]/OSBlock[0]/__add___1" -> "132 OSNet/Sequential[conv2]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"132 OSNet/Sequential[conv2]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_1" -> "145 OSNet/Sequential[conv2]/OSBlock[0]/__add___2"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"133 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_3" -> "134 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"134 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_3" -> "136 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"135 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "136 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3"  [label="(1, 16, 1, 1) \n0 -> 1", style=solid];
"136 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3" -> "137 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__3"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"137 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__3" -> "138 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"138 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_3" -> "140 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"139 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "140 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3"  [label="(16, 1, 1, 1) \n0 -> 1", style=solid];
"140 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3" -> "141 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_3"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"141 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_3" -> "142 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"142 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_3" -> "143 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/__mul___3"  [label="(6, 16, 1, 1) \n0 -> 1", style=solid];
"143 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/__mul___3" -> "144 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"144 OSNet/Sequential[conv2]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_3" -> "145 OSNet/Sequential[conv2]/OSBlock[0]/__add___2"  [label="(6, 16, 64, 32) \n0 -> 1", style=solid];
"145 OSNet/Sequential[conv2]/OSBlock[0]/__add___2" -> "146 OSNet/Sequential[conv2]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"146 OSNet/Sequential[conv2]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_2" -> "148 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"147 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "148 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0"  [label="(64, 16, 1, 1) \n0 -> 1", style=solid];
"148 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0" -> "149 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 64, 64, 32) \n0 -> 0", style=solid];
"149 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "150 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 64, 64, 32) \n0 -> 0", style=solid];
"150 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0" -> "155 OSNet/Sequential[conv2]/OSBlock[0]/__add___3"  [label="(6, 64, 64, 32) \n0 -> 0", style=solid];
"151 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "152 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFConv2d[conv]/conv2d_0"  [label="(64, 16, 1, 1) \n0 -> 1", style=solid];
"152 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFConv2d[conv]/conv2d_0" -> "153 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 64, 64, 32) \n0 -> 0", style=solid];
"153 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "154 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 64, 64, 32) \n0 -> 0", style=solid];
"154 OSNet/Sequential[conv2]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0" -> "155 OSNet/Sequential[conv2]/OSBlock[0]/__add___3"  [label="(6, 64, 64, 32) \n0 -> 1", style=solid];
"155 OSNet/Sequential[conv2]/OSBlock[0]/__add___3" -> "156 OSNet/Sequential[conv2]/OSBlock[0]/relu_0"  [label="(6, 64, 64, 32) \n0 -> 0", style=solid];
"156 OSNet/Sequential[conv2]/OSBlock[0]/relu_0" -> "157 OSNet/Sequential[conv2]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 64, 64, 32) \n0 -> 0", style=solid];
"157 OSNet/Sequential[conv2]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_3" -> "159 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 64, 64, 32) \n0 -> 0", style=solid];
"157 OSNet/Sequential[conv2]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_3" -> "301 OSNet/Sequential[conv2]/OSBlock[1]/__add___3"  [label="(6, 64, 64, 32) \n0 -> 1", style=solid];
"158 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1[conv1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "159 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0"  [label="(16, 64, 1, 1) \n0 -> 1", style=solid];
"159 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0" -> "160 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"160 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "161 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"161 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/relu__0" -> "162 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"162 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "164 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"162 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "172 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"162 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "188 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"162 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "212 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"163 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "164 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"164 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0" -> "165 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"165 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "167 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"166 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "167 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"167 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0" -> "168 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"168 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "169 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"169 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/relu__0" -> "170 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"170 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "243 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"170 OSNet/Sequential[conv2]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "253 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/__mul___0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"171 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "172 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"172 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0" -> "173 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"173 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "175 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"174 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "175 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"175 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0" -> "176 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"176 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "177 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"177 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/relu__0" -> "178 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"178 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "180 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"179 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "180 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"180 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0" -> "181 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"181 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "183 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"182 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "183 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"183 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0" -> "184 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"184 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "185 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"185 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/relu__0" -> "186 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"186 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "255 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_1"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"186 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "265 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/__mul___1"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"187 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "188 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"188 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0" -> "189 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"189 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "191 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"190 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "191 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"191 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0" -> "192 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"192 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "193 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"193 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/relu__0" -> "194 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"194 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "196 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"195 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "196 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"196 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0" -> "197 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"197 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "199 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"198 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "199 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"199 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0" -> "200 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"200 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "201 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"201 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/relu__0" -> "202 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"202 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "204 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"203 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "204 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"204 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0" -> "205 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"205 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "207 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"206 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "207 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"207 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0" -> "208 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"208 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "209 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"209 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/relu__0" -> "210 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"210 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "269 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_2"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"210 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "279 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/__mul___2"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"211 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "212 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"212 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0" -> "213 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"213 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "215 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"214 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "215 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"215 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0" -> "216 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"216 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "217 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"217 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/relu__0" -> "218 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"218 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "220 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"219 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "220 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"220 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0" -> "221 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"221 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "223 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"222 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "223 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"223 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0" -> "224 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"224 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "225 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"225 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/relu__0" -> "226 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"226 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "228 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"227 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "228 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"228 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0" -> "229 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"229 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "231 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"230 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "231 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"231 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0" -> "232 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"232 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "233 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"233 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/relu__0" -> "234 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"234 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "236 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"235 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "236 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0"  [label="(16, 16, 1, 1) \n0 -> 1", style=solid];
"236 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0" -> "237 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"237 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "239 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"238 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "239 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0"  [label="(16, 1, 3, 3) \n0 -> 1", style=solid];
"239 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0" -> "240 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"240 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "241 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/relu__0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"241 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/relu__0" -> "242 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"242 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "283 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_3"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"242 OSNet/Sequential[conv2]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "293 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/__mul___3"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"243 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0" -> "244 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"244 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0" -> "246 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"245 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "246 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0"  [label="(1, 16, 1, 1) \n0 -> 1", style=solid];
"246 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0" -> "247 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__0"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"247 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__0" -> "248 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"248 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "250 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"249 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "250 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0"  [label="(16, 1, 1, 1) \n0 -> 1", style=solid];
"250 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0" -> "251 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_0"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"251 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_0" -> "252 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"252 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_0" -> "253 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/__mul___0"  [label="(6, 16, 1, 1) \n0 -> 1", style=solid];
"253 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/__mul___0" -> "254 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"254 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_0" -> "267 OSNet/Sequential[conv2]/OSBlock[1]/__add___0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"255 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_1" -> "256 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"256 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_1" -> "258 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"257 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "258 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1"  [label="(1, 16, 1, 1) \n0 -> 1", style=solid];
"258 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1" -> "259 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__1"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"259 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__1" -> "260 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"260 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "262 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"261 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "262 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1"  [label="(16, 1, 1, 1) \n0 -> 1", style=solid];
"262 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1" -> "263 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_1"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"263 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_1" -> "264 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"264 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_1" -> "265 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/__mul___1"  [label="(6, 16, 1, 1) \n0 -> 1", style=solid];
"265 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/__mul___1" -> "266 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"266 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_1" -> "267 OSNet/Sequential[conv2]/OSBlock[1]/__add___0"  [label="(6, 16, 64, 32) \n0 -> 1", style=solid];
"267 OSNet/Sequential[conv2]/OSBlock[1]/__add___0" -> "268 OSNet/Sequential[conv2]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"268 OSNet/Sequential[conv2]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_0" -> "281 OSNet/Sequential[conv2]/OSBlock[1]/__add___1"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"269 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_2" -> "270 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"270 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_2" -> "272 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"271 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "272 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2"  [label="(1, 16, 1, 1) \n0 -> 1", style=solid];
"272 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2" -> "273 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__2"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"273 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__2" -> "274 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"274 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "276 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"275 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "276 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2"  [label="(16, 1, 1, 1) \n0 -> 1", style=solid];
"276 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2" -> "277 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_2"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"277 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_2" -> "278 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"278 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_2" -> "279 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/__mul___2"  [label="(6, 16, 1, 1) \n0 -> 1", style=solid];
"279 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/__mul___2" -> "280 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"280 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_2" -> "281 OSNet/Sequential[conv2]/OSBlock[1]/__add___1"  [label="(6, 16, 64, 32) \n0 -> 1", style=solid];
"281 OSNet/Sequential[conv2]/OSBlock[1]/__add___1" -> "282 OSNet/Sequential[conv2]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"282 OSNet/Sequential[conv2]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_1" -> "295 OSNet/Sequential[conv2]/OSBlock[1]/__add___2"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"283 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_3" -> "284 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"284 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_3" -> "286 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"285 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "286 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3"  [label="(1, 16, 1, 1) \n0 -> 1", style=solid];
"286 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3" -> "287 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__3"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"287 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__3" -> "288 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"288 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_3" -> "290 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"289 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "290 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3"  [label="(16, 1, 1, 1) \n0 -> 1", style=solid];
"290 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3" -> "291 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_3"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"291 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_3" -> "292 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 16, 1, 1) \n0 -> 0", style=solid];
"292 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_3" -> "293 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/__mul___3"  [label="(6, 16, 1, 1) \n0 -> 1", style=solid];
"293 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/__mul___3" -> "294 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"294 OSNet/Sequential[conv2]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_3" -> "295 OSNet/Sequential[conv2]/OSBlock[1]/__add___2"  [label="(6, 16, 64, 32) \n0 -> 1", style=solid];
"295 OSNet/Sequential[conv2]/OSBlock[1]/__add___2" -> "296 OSNet/Sequential[conv2]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"296 OSNet/Sequential[conv2]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_2" -> "298 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 16, 64, 32) \n0 -> 0", style=solid];
"297 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "298 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0"  [label="(64, 16, 1, 1) \n0 -> 1", style=solid];
"298 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0" -> "299 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 64, 64, 32) \n0 -> 0", style=solid];
"299 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "300 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 64, 64, 32) \n0 -> 0", style=solid];
"300 OSNet/Sequential[conv2]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0" -> "301 OSNet/Sequential[conv2]/OSBlock[1]/__add___3"  [label="(6, 64, 64, 32) \n0 -> 0", style=solid];
"301 OSNet/Sequential[conv2]/OSBlock[1]/__add___3" -> "302 OSNet/Sequential[conv2]/OSBlock[1]/relu_0"  [label="(6, 64, 64, 32) \n0 -> 0", style=solid];
"302 OSNet/Sequential[conv2]/OSBlock[1]/relu_0" -> "303 OSNet/Sequential[conv2]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 64, 64, 32) \n0 -> 0", style=solid];
"303 OSNet/Sequential[conv2]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_3" -> "305 OSNet/Sequential[conv2]/Sequential[2]/Conv1x1[0]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 64, 64, 32) \n0 -> 0", style=solid];
"304 OSNet/Sequential[conv2]/Sequential[2]/Conv1x1[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "305 OSNet/Sequential[conv2]/Sequential[2]/Conv1x1[0]/NNCFConv2d[conv]/conv2d_0"  [label="(64, 64, 1, 1) \n0 -> 1", style=solid];
"305 OSNet/Sequential[conv2]/Sequential[2]/Conv1x1[0]/NNCFConv2d[conv]/conv2d_0" -> "306 OSNet/Sequential[conv2]/Sequential[2]/Conv1x1[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 64, 64, 32) \n0 -> 0", style=solid];
"306 OSNet/Sequential[conv2]/Sequential[2]/Conv1x1[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "307 OSNet/Sequential[conv2]/Sequential[2]/Conv1x1[0]/ReLU[relu]/relu__0"  [label="(6, 64, 64, 32) \n0 -> 0", style=solid];
"307 OSNet/Sequential[conv2]/Sequential[2]/Conv1x1[0]/ReLU[relu]/relu__0" -> "308 OSNet/Sequential[conv2]/Sequential[2]/Conv1x1[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 64, 64, 32) \n0 -> 0", style=solid];
"308 OSNet/Sequential[conv2]/Sequential[2]/Conv1x1[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "309 OSNet/Sequential[conv2]/Sequential[2]/AvgPool2d[1]/avg_pool2d_0"  [label="(6, 64, 64, 32) \n0 -> 0", style=solid];
"309 OSNet/Sequential[conv2]/Sequential[2]/AvgPool2d[1]/avg_pool2d_0" -> "310 OSNet/Sequential[conv2]/Sequential[2]/AvgPool2d[1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 64, 32, 16) \n0 -> 0", style=solid];
"310 OSNet/Sequential[conv2]/Sequential[2]/AvgPool2d[1]/SymmetricQuantizer/symmetric_quantize_0" -> "312 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 64, 32, 16) \n0 -> 0", style=solid];
"310 OSNet/Sequential[conv2]/Sequential[2]/AvgPool2d[1]/SymmetricQuantizer/symmetric_quantize_0" -> "455 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 64, 32, 16) \n0 -> 0", style=solid];
"311 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1[conv1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "312 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0"  [label="(24, 64, 1, 1) \n0 -> 1", style=solid];
"312 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0" -> "313 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"313 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "314 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"314 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/relu__0" -> "315 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"315 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "317 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"315 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "325 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"315 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "341 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"315 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "365 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"316 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "317 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"317 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0" -> "318 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"318 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "320 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"319 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "320 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"320 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0" -> "321 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"321 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "322 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"322 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/relu__0" -> "323 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"323 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "396 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"323 OSNet/Sequential[conv3]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "406 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/__mul___0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"324 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "325 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"325 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0" -> "326 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"326 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "328 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"327 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "328 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"328 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0" -> "329 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"329 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "330 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"330 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/relu__0" -> "331 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"331 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "333 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"332 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "333 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"333 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0" -> "334 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"334 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "336 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"335 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "336 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"336 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0" -> "337 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"337 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "338 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"338 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/relu__0" -> "339 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"339 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "408 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_1"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"339 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "418 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/__mul___1"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"340 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "341 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"341 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0" -> "342 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"342 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "344 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"343 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "344 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"344 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0" -> "345 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"345 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "346 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"346 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/relu__0" -> "347 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"347 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "349 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"348 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "349 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"349 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0" -> "350 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"350 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "352 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"351 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "352 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"352 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0" -> "353 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"353 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "354 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"354 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/relu__0" -> "355 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"355 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "357 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"356 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "357 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"357 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0" -> "358 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"358 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "360 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"359 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "360 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"360 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0" -> "361 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"361 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "362 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"362 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/relu__0" -> "363 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"363 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "422 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_2"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"363 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "432 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/__mul___2"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"364 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "365 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"365 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0" -> "366 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"366 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "368 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"367 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "368 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"368 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0" -> "369 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"369 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "370 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"370 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/relu__0" -> "371 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"371 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "373 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"372 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "373 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"373 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0" -> "374 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"374 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "376 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"375 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "376 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"376 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0" -> "377 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"377 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "378 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"378 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/relu__0" -> "379 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"379 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "381 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"380 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "381 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"381 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0" -> "382 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"382 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "384 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"383 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "384 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"384 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0" -> "385 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"385 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "386 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"386 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/relu__0" -> "387 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"387 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "389 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"388 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "389 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"389 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0" -> "390 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"390 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "392 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"391 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "392 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"392 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0" -> "393 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"393 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "394 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"394 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/relu__0" -> "395 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"395 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "436 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_3"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"395 OSNet/Sequential[conv3]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "446 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/__mul___3"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"396 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0" -> "397 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"397 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0" -> "399 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"398 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "399 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0"  [label="(1, 24, 1, 1) \n0 -> 1", style=solid];
"399 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0" -> "400 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__0"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"400 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__0" -> "401 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"401 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "403 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"402 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "403 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0"  [label="(24, 1, 1, 1) \n0 -> 1", style=solid];
"403 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0" -> "404 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_0"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"404 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_0" -> "405 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"405 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_0" -> "406 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/__mul___0"  [label="(6, 24, 1, 1) \n0 -> 1", style=solid];
"406 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/__mul___0" -> "407 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"407 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_0" -> "420 OSNet/Sequential[conv3]/OSBlock[0]/__add___0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"408 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_1" -> "409 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"409 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_1" -> "411 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"410 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "411 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1"  [label="(1, 24, 1, 1) \n0 -> 1", style=solid];
"411 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1" -> "412 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__1"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"412 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__1" -> "413 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"413 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "415 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"414 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "415 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1"  [label="(24, 1, 1, 1) \n0 -> 1", style=solid];
"415 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1" -> "416 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_1"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"416 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_1" -> "417 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"417 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_1" -> "418 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/__mul___1"  [label="(6, 24, 1, 1) \n0 -> 1", style=solid];
"418 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/__mul___1" -> "419 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"419 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_1" -> "420 OSNet/Sequential[conv3]/OSBlock[0]/__add___0"  [label="(6, 24, 32, 16) \n0 -> 1", style=solid];
"420 OSNet/Sequential[conv3]/OSBlock[0]/__add___0" -> "421 OSNet/Sequential[conv3]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"421 OSNet/Sequential[conv3]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_0" -> "434 OSNet/Sequential[conv3]/OSBlock[0]/__add___1"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"422 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_2" -> "423 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"423 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_2" -> "425 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"424 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "425 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2"  [label="(1, 24, 1, 1) \n0 -> 1", style=solid];
"425 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2" -> "426 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__2"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"426 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__2" -> "427 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"427 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "429 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"428 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "429 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2"  [label="(24, 1, 1, 1) \n0 -> 1", style=solid];
"429 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2" -> "430 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_2"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"430 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_2" -> "431 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"431 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_2" -> "432 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/__mul___2"  [label="(6, 24, 1, 1) \n0 -> 1", style=solid];
"432 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/__mul___2" -> "433 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"433 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_2" -> "434 OSNet/Sequential[conv3]/OSBlock[0]/__add___1"  [label="(6, 24, 32, 16) \n0 -> 1", style=solid];
"434 OSNet/Sequential[conv3]/OSBlock[0]/__add___1" -> "435 OSNet/Sequential[conv3]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"435 OSNet/Sequential[conv3]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_1" -> "448 OSNet/Sequential[conv3]/OSBlock[0]/__add___2"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"436 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_3" -> "437 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"437 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_3" -> "439 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"438 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "439 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3"  [label="(1, 24, 1, 1) \n0 -> 1", style=solid];
"439 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3" -> "440 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__3"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"440 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__3" -> "441 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"441 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_3" -> "443 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"442 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "443 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3"  [label="(24, 1, 1, 1) \n0 -> 1", style=solid];
"443 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3" -> "444 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_3"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"444 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_3" -> "445 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"445 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_3" -> "446 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/__mul___3"  [label="(6, 24, 1, 1) \n0 -> 1", style=solid];
"446 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/__mul___3" -> "447 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"447 OSNet/Sequential[conv3]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_3" -> "448 OSNet/Sequential[conv3]/OSBlock[0]/__add___2"  [label="(6, 24, 32, 16) \n0 -> 1", style=solid];
"448 OSNet/Sequential[conv3]/OSBlock[0]/__add___2" -> "449 OSNet/Sequential[conv3]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"449 OSNet/Sequential[conv3]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_2" -> "451 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"450 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "451 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0"  [label="(96, 24, 1, 1) \n0 -> 1", style=solid];
"451 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0" -> "452 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 96, 32, 16) \n0 -> 0", style=solid];
"452 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "453 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 96, 32, 16) \n0 -> 0", style=solid];
"453 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0" -> "458 OSNet/Sequential[conv3]/OSBlock[0]/__add___3"  [label="(6, 96, 32, 16) \n0 -> 0", style=solid];
"454 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "455 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFConv2d[conv]/conv2d_0"  [label="(96, 64, 1, 1) \n0 -> 1", style=solid];
"455 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFConv2d[conv]/conv2d_0" -> "456 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 96, 32, 16) \n0 -> 0", style=solid];
"456 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "457 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 96, 32, 16) \n0 -> 0", style=solid];
"457 OSNet/Sequential[conv3]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0" -> "458 OSNet/Sequential[conv3]/OSBlock[0]/__add___3"  [label="(6, 96, 32, 16) \n0 -> 1", style=solid];
"458 OSNet/Sequential[conv3]/OSBlock[0]/__add___3" -> "459 OSNet/Sequential[conv3]/OSBlock[0]/relu_0"  [label="(6, 96, 32, 16) \n0 -> 0", style=solid];
"459 OSNet/Sequential[conv3]/OSBlock[0]/relu_0" -> "460 OSNet/Sequential[conv3]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 96, 32, 16) \n0 -> 0", style=solid];
"460 OSNet/Sequential[conv3]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_3" -> "462 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 96, 32, 16) \n0 -> 0", style=solid];
"460 OSNet/Sequential[conv3]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_3" -> "604 OSNet/Sequential[conv3]/OSBlock[1]/__add___3"  [label="(6, 96, 32, 16) \n0 -> 1", style=solid];
"461 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1[conv1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "462 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0"  [label="(24, 96, 1, 1) \n0 -> 1", style=solid];
"462 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0" -> "463 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"463 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "464 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"464 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/relu__0" -> "465 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"465 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "467 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"465 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "475 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"465 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "491 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"465 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "515 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"466 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "467 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"467 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0" -> "468 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"468 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "470 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"469 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "470 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"470 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0" -> "471 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"471 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "472 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"472 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/relu__0" -> "473 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"473 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "546 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"473 OSNet/Sequential[conv3]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "556 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/__mul___0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"474 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "475 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"475 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0" -> "476 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"476 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "478 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"477 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "478 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"478 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0" -> "479 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"479 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "480 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"480 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/relu__0" -> "481 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"481 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "483 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"482 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "483 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"483 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0" -> "484 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"484 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "486 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"485 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "486 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"486 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0" -> "487 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"487 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "488 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"488 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/relu__0" -> "489 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"489 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "558 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_1"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"489 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "568 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/__mul___1"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"490 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "491 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"491 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0" -> "492 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"492 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "494 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"493 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "494 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"494 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0" -> "495 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"495 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "496 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"496 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/relu__0" -> "497 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"497 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "499 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"498 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "499 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"499 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0" -> "500 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"500 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "502 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"501 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "502 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"502 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0" -> "503 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"503 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "504 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"504 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/relu__0" -> "505 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"505 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "507 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"506 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "507 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"507 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0" -> "508 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"508 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "510 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"509 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "510 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"510 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0" -> "511 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"511 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "512 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"512 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/relu__0" -> "513 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"513 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "572 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_2"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"513 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "582 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/__mul___2"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"514 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "515 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"515 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0" -> "516 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"516 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "518 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"517 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "518 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"518 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0" -> "519 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"519 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "520 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"520 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/relu__0" -> "521 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"521 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "523 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"522 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "523 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"523 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0" -> "524 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"524 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "526 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"525 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "526 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"526 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0" -> "527 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"527 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "528 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"528 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/relu__0" -> "529 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"529 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "531 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"530 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "531 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"531 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0" -> "532 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"532 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "534 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"533 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "534 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"534 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0" -> "535 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"535 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "536 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"536 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/relu__0" -> "537 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"537 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "539 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"538 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "539 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0"  [label="(24, 24, 1, 1) \n0 -> 1", style=solid];
"539 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0" -> "540 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"540 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "542 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"541 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "542 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0"  [label="(24, 1, 3, 3) \n0 -> 1", style=solid];
"542 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0" -> "543 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"543 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "544 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/relu__0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"544 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/relu__0" -> "545 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"545 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "586 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_3"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"545 OSNet/Sequential[conv3]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "596 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/__mul___3"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"546 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0" -> "547 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"547 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0" -> "549 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"548 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "549 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0"  [label="(1, 24, 1, 1) \n0 -> 1", style=solid];
"549 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0" -> "550 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__0"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"550 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__0" -> "551 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"551 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "553 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"552 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "553 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0"  [label="(24, 1, 1, 1) \n0 -> 1", style=solid];
"553 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0" -> "554 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_0"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"554 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_0" -> "555 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"555 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_0" -> "556 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/__mul___0"  [label="(6, 24, 1, 1) \n0 -> 1", style=solid];
"556 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/__mul___0" -> "557 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"557 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_0" -> "570 OSNet/Sequential[conv3]/OSBlock[1]/__add___0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"558 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_1" -> "559 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"559 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_1" -> "561 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"560 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "561 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1"  [label="(1, 24, 1, 1) \n0 -> 1", style=solid];
"561 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1" -> "562 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__1"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"562 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__1" -> "563 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"563 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "565 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"564 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "565 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1"  [label="(24, 1, 1, 1) \n0 -> 1", style=solid];
"565 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1" -> "566 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_1"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"566 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_1" -> "567 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"567 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_1" -> "568 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/__mul___1"  [label="(6, 24, 1, 1) \n0 -> 1", style=solid];
"568 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/__mul___1" -> "569 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"569 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_1" -> "570 OSNet/Sequential[conv3]/OSBlock[1]/__add___0"  [label="(6, 24, 32, 16) \n0 -> 1", style=solid];
"570 OSNet/Sequential[conv3]/OSBlock[1]/__add___0" -> "571 OSNet/Sequential[conv3]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"571 OSNet/Sequential[conv3]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_0" -> "584 OSNet/Sequential[conv3]/OSBlock[1]/__add___1"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"572 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_2" -> "573 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"573 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_2" -> "575 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"574 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "575 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2"  [label="(1, 24, 1, 1) \n0 -> 1", style=solid];
"575 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2" -> "576 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__2"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"576 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__2" -> "577 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"577 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "579 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"578 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "579 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2"  [label="(24, 1, 1, 1) \n0 -> 1", style=solid];
"579 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2" -> "580 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_2"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"580 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_2" -> "581 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"581 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_2" -> "582 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/__mul___2"  [label="(6, 24, 1, 1) \n0 -> 1", style=solid];
"582 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/__mul___2" -> "583 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"583 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_2" -> "584 OSNet/Sequential[conv3]/OSBlock[1]/__add___1"  [label="(6, 24, 32, 16) \n0 -> 1", style=solid];
"584 OSNet/Sequential[conv3]/OSBlock[1]/__add___1" -> "585 OSNet/Sequential[conv3]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"585 OSNet/Sequential[conv3]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_1" -> "598 OSNet/Sequential[conv3]/OSBlock[1]/__add___2"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"586 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_3" -> "587 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"587 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_3" -> "589 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"588 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "589 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3"  [label="(1, 24, 1, 1) \n0 -> 1", style=solid];
"589 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3" -> "590 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__3"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"590 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__3" -> "591 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"591 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_3" -> "593 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3"  [label="(6, 1, 1, 1) \n0 -> 0", style=solid];
"592 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "593 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3"  [label="(24, 1, 1, 1) \n0 -> 1", style=solid];
"593 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3" -> "594 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_3"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"594 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_3" -> "595 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 24, 1, 1) \n0 -> 0", style=solid];
"595 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_3" -> "596 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/__mul___3"  [label="(6, 24, 1, 1) \n0 -> 1", style=solid];
"596 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/__mul___3" -> "597 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"597 OSNet/Sequential[conv3]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_3" -> "598 OSNet/Sequential[conv3]/OSBlock[1]/__add___2"  [label="(6, 24, 32, 16) \n0 -> 1", style=solid];
"598 OSNet/Sequential[conv3]/OSBlock[1]/__add___2" -> "599 OSNet/Sequential[conv3]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"599 OSNet/Sequential[conv3]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_2" -> "601 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 24, 32, 16) \n0 -> 0", style=solid];
"600 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "601 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0"  [label="(96, 24, 1, 1) \n0 -> 1", style=solid];
"601 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0" -> "602 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 96, 32, 16) \n0 -> 0", style=solid];
"602 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "603 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 96, 32, 16) \n0 -> 0", style=solid];
"603 OSNet/Sequential[conv3]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0" -> "604 OSNet/Sequential[conv3]/OSBlock[1]/__add___3"  [label="(6, 96, 32, 16) \n0 -> 0", style=solid];
"604 OSNet/Sequential[conv3]/OSBlock[1]/__add___3" -> "605 OSNet/Sequential[conv3]/OSBlock[1]/relu_0"  [label="(6, 96, 32, 16) \n0 -> 0", style=solid];
"605 OSNet/Sequential[conv3]/OSBlock[1]/relu_0" -> "606 OSNet/Sequential[conv3]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 96, 32, 16) \n0 -> 0", style=solid];
"606 OSNet/Sequential[conv3]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_3" -> "608 OSNet/Sequential[conv3]/Sequential[2]/Conv1x1[0]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 96, 32, 16) \n0 -> 0", style=solid];
"607 OSNet/Sequential[conv3]/Sequential[2]/Conv1x1[0]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "608 OSNet/Sequential[conv3]/Sequential[2]/Conv1x1[0]/NNCFConv2d[conv]/conv2d_0"  [label="(96, 96, 1, 1) \n0 -> 1", style=solid];
"608 OSNet/Sequential[conv3]/Sequential[2]/Conv1x1[0]/NNCFConv2d[conv]/conv2d_0" -> "609 OSNet/Sequential[conv3]/Sequential[2]/Conv1x1[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 96, 32, 16) \n0 -> 0", style=solid];
"609 OSNet/Sequential[conv3]/Sequential[2]/Conv1x1[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "610 OSNet/Sequential[conv3]/Sequential[2]/Conv1x1[0]/ReLU[relu]/relu__0"  [label="(6, 96, 32, 16) \n0 -> 0", style=solid];
"610 OSNet/Sequential[conv3]/Sequential[2]/Conv1x1[0]/ReLU[relu]/relu__0" -> "611 OSNet/Sequential[conv3]/Sequential[2]/Conv1x1[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 96, 32, 16) \n0 -> 0", style=solid];
"611 OSNet/Sequential[conv3]/Sequential[2]/Conv1x1[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "612 OSNet/Sequential[conv3]/Sequential[2]/AvgPool2d[1]/avg_pool2d_0"  [label="(6, 96, 32, 16) \n0 -> 0", style=solid];
"612 OSNet/Sequential[conv3]/Sequential[2]/AvgPool2d[1]/avg_pool2d_0" -> "613 OSNet/Sequential[conv3]/Sequential[2]/AvgPool2d[1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 96, 16, 8) \n0 -> 0", style=solid];
"613 OSNet/Sequential[conv3]/Sequential[2]/AvgPool2d[1]/SymmetricQuantizer/symmetric_quantize_0" -> "615 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 96, 16, 8) \n0 -> 0", style=solid];
"613 OSNet/Sequential[conv3]/Sequential[2]/AvgPool2d[1]/SymmetricQuantizer/symmetric_quantize_0" -> "758 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 96, 16, 8) \n0 -> 0", style=solid];
"614 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1[conv1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "615 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0"  [label="(32, 96, 1, 1) \n0 -> 1", style=solid];
"615 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0" -> "616 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"616 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "617 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"617 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/relu__0" -> "618 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"618 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "620 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"618 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "628 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"618 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "644 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"618 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "668 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"619 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "620 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"620 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0" -> "621 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"621 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "623 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"622 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "623 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"623 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0" -> "624 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"624 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "625 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"625 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/relu__0" -> "626 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"626 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "699 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"626 OSNet/Sequential[conv4]/OSBlock[0]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "709 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/__mul___0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"627 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "628 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"628 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0" -> "629 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"629 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "631 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"630 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "631 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"631 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0" -> "632 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"632 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "633 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"633 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/relu__0" -> "634 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"634 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "636 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"635 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "636 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"636 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0" -> "637 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"637 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "639 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"638 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "639 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"639 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0" -> "640 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"640 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "641 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"641 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/relu__0" -> "642 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"642 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "711 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_1"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"642 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "721 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/__mul___1"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"643 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "644 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"644 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0" -> "645 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"645 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "647 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"646 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "647 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"647 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0" -> "648 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"648 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "649 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"649 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/relu__0" -> "650 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"650 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "652 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"651 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "652 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"652 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0" -> "653 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"653 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "655 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"654 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "655 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"655 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0" -> "656 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"656 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "657 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"657 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/relu__0" -> "658 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"658 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "660 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"659 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "660 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"660 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0" -> "661 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"661 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "663 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"662 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "663 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"663 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0" -> "664 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"664 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "665 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"665 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/relu__0" -> "666 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"666 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "725 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_2"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"666 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "735 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/__mul___2"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"667 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "668 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"668 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0" -> "669 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"669 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "671 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"670 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "671 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"671 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0" -> "672 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"672 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "673 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"673 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/relu__0" -> "674 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"674 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "676 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"675 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "676 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"676 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0" -> "677 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"677 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "679 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"678 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "679 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"679 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0" -> "680 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"680 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "681 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"681 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/relu__0" -> "682 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"682 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "684 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"683 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "684 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"684 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0" -> "685 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"685 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "687 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"686 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "687 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"687 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0" -> "688 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"688 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "689 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"689 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/relu__0" -> "690 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"690 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "692 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"691 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "692 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"692 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0" -> "693 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"693 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "695 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"694 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "695 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"695 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0" -> "696 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"696 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "697 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"697 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/relu__0" -> "698 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"698 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "739 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_3"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"698 OSNet/Sequential[conv4]/OSBlock[0]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "749 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/__mul___3"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"699 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0" -> "700 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"700 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0" -> "702 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"701 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "702 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0"  [label="(2, 32, 1, 1) \n0 -> 1", style=solid];
"702 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0" -> "703 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__0"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"703 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__0" -> "704 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"704 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "706 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"705 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "706 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0"  [label="(32, 2, 1, 1) \n0 -> 1", style=solid];
"706 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0" -> "707 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_0"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"707 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_0" -> "708 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"708 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_0" -> "709 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/__mul___0"  [label="(6, 32, 1, 1) \n0 -> 1", style=solid];
"709 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/__mul___0" -> "710 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"710 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_0" -> "723 OSNet/Sequential[conv4]/OSBlock[0]/__add___0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"711 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_1" -> "712 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"712 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_1" -> "714 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"713 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "714 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1"  [label="(2, 32, 1, 1) \n0 -> 1", style=solid];
"714 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1" -> "715 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__1"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"715 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__1" -> "716 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"716 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "718 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"717 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "718 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1"  [label="(32, 2, 1, 1) \n0 -> 1", style=solid];
"718 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1" -> "719 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_1"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"719 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_1" -> "720 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"720 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_1" -> "721 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/__mul___1"  [label="(6, 32, 1, 1) \n0 -> 1", style=solid];
"721 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/__mul___1" -> "722 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"722 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_1" -> "723 OSNet/Sequential[conv4]/OSBlock[0]/__add___0"  [label="(6, 32, 16, 8) \n0 -> 1", style=solid];
"723 OSNet/Sequential[conv4]/OSBlock[0]/__add___0" -> "724 OSNet/Sequential[conv4]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"724 OSNet/Sequential[conv4]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_0" -> "737 OSNet/Sequential[conv4]/OSBlock[0]/__add___1"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"725 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_2" -> "726 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"726 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_2" -> "728 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"727 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "728 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2"  [label="(2, 32, 1, 1) \n0 -> 1", style=solid];
"728 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2" -> "729 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__2"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"729 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__2" -> "730 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"730 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "732 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"731 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "732 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2"  [label="(32, 2, 1, 1) \n0 -> 1", style=solid];
"732 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2" -> "733 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_2"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"733 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_2" -> "734 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"734 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_2" -> "735 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/__mul___2"  [label="(6, 32, 1, 1) \n0 -> 1", style=solid];
"735 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/__mul___2" -> "736 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"736 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_2" -> "737 OSNet/Sequential[conv4]/OSBlock[0]/__add___1"  [label="(6, 32, 16, 8) \n0 -> 1", style=solid];
"737 OSNet/Sequential[conv4]/OSBlock[0]/__add___1" -> "738 OSNet/Sequential[conv4]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"738 OSNet/Sequential[conv4]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_1" -> "751 OSNet/Sequential[conv4]/OSBlock[0]/__add___2"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"739 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_3" -> "740 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"740 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_3" -> "742 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"741 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "742 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3"  [label="(2, 32, 1, 1) \n0 -> 1", style=solid];
"742 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3" -> "743 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__3"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"743 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/relu__3" -> "744 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"744 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_3" -> "746 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"745 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "746 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3"  [label="(32, 2, 1, 1) \n0 -> 1", style=solid];
"746 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3" -> "747 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_3"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"747 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_3" -> "748 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"748 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_3" -> "749 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/__mul___3"  [label="(6, 32, 1, 1) \n0 -> 1", style=solid];
"749 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/__mul___3" -> "750 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"750 OSNet/Sequential[conv4]/OSBlock[0]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_3" -> "751 OSNet/Sequential[conv4]/OSBlock[0]/__add___2"  [label="(6, 32, 16, 8) \n0 -> 1", style=solid];
"751 OSNet/Sequential[conv4]/OSBlock[0]/__add___2" -> "752 OSNet/Sequential[conv4]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"752 OSNet/Sequential[conv4]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_2" -> "754 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"753 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "754 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0"  [label="(128, 32, 1, 1) \n0 -> 1", style=solid];
"754 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0" -> "755 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 128, 16, 8) \n0 -> 0", style=solid];
"755 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "756 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 128, 16, 8) \n0 -> 0", style=solid];
"756 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0" -> "761 OSNet/Sequential[conv4]/OSBlock[0]/__add___3"  [label="(6, 128, 16, 8) \n0 -> 0", style=solid];
"757 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "758 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFConv2d[conv]/conv2d_0"  [label="(128, 96, 1, 1) \n0 -> 1", style=solid];
"758 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFConv2d[conv]/conv2d_0" -> "759 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 128, 16, 8) \n0 -> 0", style=solid];
"759 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "760 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 128, 16, 8) \n0 -> 0", style=solid];
"760 OSNet/Sequential[conv4]/OSBlock[0]/Conv1x1Linear[downsample]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0" -> "761 OSNet/Sequential[conv4]/OSBlock[0]/__add___3"  [label="(6, 128, 16, 8) \n0 -> 1", style=solid];
"761 OSNet/Sequential[conv4]/OSBlock[0]/__add___3" -> "762 OSNet/Sequential[conv4]/OSBlock[0]/relu_0"  [label="(6, 128, 16, 8) \n0 -> 0", style=solid];
"762 OSNet/Sequential[conv4]/OSBlock[0]/relu_0" -> "763 OSNet/Sequential[conv4]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 128, 16, 8) \n0 -> 0", style=solid];
"763 OSNet/Sequential[conv4]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_3" -> "765 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 128, 16, 8) \n0 -> 0", style=solid];
"763 OSNet/Sequential[conv4]/OSBlock[0]/SymmetricQuantizer/symmetric_quantize_3" -> "907 OSNet/Sequential[conv4]/OSBlock[1]/__add___3"  [label="(6, 128, 16, 8) \n0 -> 1", style=solid];
"764 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1[conv1]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "765 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0"  [label="(32, 128, 1, 1) \n0 -> 1", style=solid];
"765 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1[conv1]/NNCFConv2d[conv]/conv2d_0" -> "766 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"766 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1[conv1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "767 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"767 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/relu__0" -> "768 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"768 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "770 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"768 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "778 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"768 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "794 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"768 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1[conv1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "818 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"769 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "770 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"770 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/conv2d_0" -> "771 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"771 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "773 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"772 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "773 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"773 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/NNCFConv2d[conv2]/conv2d_0" -> "774 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"774 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "775 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"775 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/relu__0" -> "776 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"776 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "849 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"776 OSNet/Sequential[conv4]/OSBlock[1]/LightConv3x3[conv2a]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "859 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/__mul___0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"777 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "778 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"778 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0" -> "779 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"779 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "781 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"780 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "781 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"781 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0" -> "782 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"782 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "783 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"783 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/relu__0" -> "784 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"784 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "786 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"785 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "786 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"786 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0" -> "787 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"787 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "789 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"788 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "789 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"789 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0" -> "790 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"790 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "791 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"791 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/relu__0" -> "792 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"792 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "861 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_1"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"792 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2b]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "871 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/__mul___1"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"793 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "794 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"794 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0" -> "795 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"795 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "797 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"796 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "797 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"797 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0" -> "798 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"798 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "799 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"799 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/relu__0" -> "800 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"800 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "802 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"801 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "802 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"802 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0" -> "803 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"803 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "805 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"804 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "805 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"805 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0" -> "806 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"806 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "807 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"807 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/relu__0" -> "808 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"808 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "810 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"809 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "810 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"810 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0" -> "811 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"811 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "813 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"812 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "813 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"813 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0" -> "814 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"814 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "815 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"815 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/relu__0" -> "816 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"816 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "875 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_2"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"816 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2c]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "885 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/__mul___2"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"817 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "818 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"818 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/conv2d_0" -> "819 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"819 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "821 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"820 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "821 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"821 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFConv2d[conv2]/conv2d_0" -> "822 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"822 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "823 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"823 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/relu__0" -> "824 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"824 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[0]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "826 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"825 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "826 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"826 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/conv2d_0" -> "827 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"827 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "829 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"828 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "829 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"829 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFConv2d[conv2]/conv2d_0" -> "830 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"830 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "831 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"831 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/relu__0" -> "832 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"832 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[1]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "834 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"833 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "834 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"834 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/conv2d_0" -> "835 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"835 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "837 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"836 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "837 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"837 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFConv2d[conv2]/conv2d_0" -> "838 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"838 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "839 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"839 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/relu__0" -> "840 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"840 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[2]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "842 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"841 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "842 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0"  [label="(32, 32, 1, 1) \n0 -> 1", style=solid];
"842 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/conv2d_0" -> "843 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"843 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv1]/SymmetricQuantizer/symmetric_quantize_0" -> "845 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"844 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "845 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0"  [label="(32, 1, 3, 3) \n0 -> 1", style=solid];
"845 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFConv2d[conv2]/conv2d_0" -> "846 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"846 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "847 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/relu__0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"847 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/relu__0" -> "848 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"848 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "889 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_3"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"848 OSNet/Sequential[conv4]/OSBlock[1]/Sequential[conv2d]/LightConv3x3[3]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "899 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/__mul___3"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"849 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0" -> "850 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"850 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0" -> "852 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"851 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "852 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0"  [label="(2, 32, 1, 1) \n0 -> 1", style=solid];
"852 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_0" -> "853 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__0"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"853 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__0" -> "854 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"854 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "856 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"855 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "856 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0"  [label="(32, 2, 1, 1) \n0 -> 1", style=solid];
"856 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_0" -> "857 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_0"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"857 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_0" -> "858 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"858 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_0" -> "859 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/__mul___0"  [label="(6, 32, 1, 1) \n0 -> 1", style=solid];
"859 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/__mul___0" -> "860 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"860 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_0" -> "873 OSNet/Sequential[conv4]/OSBlock[1]/__add___0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"861 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_1" -> "862 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"862 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_1" -> "864 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"863 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "864 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1"  [label="(2, 32, 1, 1) \n0 -> 1", style=solid];
"864 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_1" -> "865 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__1"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"865 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__1" -> "866 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"866 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_1" -> "868 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"867 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_1" -> "868 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1"  [label="(32, 2, 1, 1) \n0 -> 1", style=solid];
"868 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_1" -> "869 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_1"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"869 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_1" -> "870 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"870 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_1" -> "871 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/__mul___1"  [label="(6, 32, 1, 1) \n0 -> 1", style=solid];
"871 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/__mul___1" -> "872 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"872 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_1" -> "873 OSNet/Sequential[conv4]/OSBlock[1]/__add___0"  [label="(6, 32, 16, 8) \n0 -> 1", style=solid];
"873 OSNet/Sequential[conv4]/OSBlock[1]/__add___0" -> "874 OSNet/Sequential[conv4]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"874 OSNet/Sequential[conv4]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_0" -> "887 OSNet/Sequential[conv4]/OSBlock[1]/__add___1"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"875 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_2" -> "876 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"876 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_2" -> "878 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"877 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "878 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2"  [label="(2, 32, 1, 1) \n0 -> 1", style=solid];
"878 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_2" -> "879 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__2"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"879 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__2" -> "880 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"880 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_2" -> "882 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"881 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_2" -> "882 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2"  [label="(32, 2, 1, 1) \n0 -> 1", style=solid];
"882 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_2" -> "883 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_2"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"883 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_2" -> "884 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"884 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_2" -> "885 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/__mul___2"  [label="(6, 32, 1, 1) \n0 -> 1", style=solid];
"885 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/__mul___2" -> "886 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"886 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_2" -> "887 OSNet/Sequential[conv4]/OSBlock[1]/__add___1"  [label="(6, 32, 16, 8) \n0 -> 1", style=solid];
"887 OSNet/Sequential[conv4]/OSBlock[1]/__add___1" -> "888 OSNet/Sequential[conv4]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_1"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"888 OSNet/Sequential[conv4]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_1" -> "901 OSNet/Sequential[conv4]/OSBlock[1]/__add___2"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"889 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_3" -> "890 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"890 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_3" -> "892 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"891 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "892 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3"  [label="(2, 32, 1, 1) \n0 -> 1", style=solid];
"892 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc1]/conv2d_3" -> "893 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__3"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"893 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/relu__3" -> "894 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"894 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_3" -> "896 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3"  [label="(6, 2, 1, 1) \n0 -> 0", style=solid];
"895 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_3" -> "896 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3"  [label="(32, 2, 1, 1) \n0 -> 1", style=solid];
"896 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/NNCFConv2d[fc2]/conv2d_3" -> "897 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_3"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"897 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/sigmoid_3" -> "898 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 32, 1, 1) \n0 -> 0", style=solid];
"898 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/Sigmoid[gate_activation]/SymmetricQuantizer/symmetric_quantize_3" -> "899 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/__mul___3"  [label="(6, 32, 1, 1) \n0 -> 1", style=solid];
"899 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/__mul___3" -> "900 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"900 OSNet/Sequential[conv4]/OSBlock[1]/ChannelGate[gate]/SymmetricQuantizer/symmetric_quantize_3" -> "901 OSNet/Sequential[conv4]/OSBlock[1]/__add___2"  [label="(6, 32, 16, 8) \n0 -> 1", style=solid];
"901 OSNet/Sequential[conv4]/OSBlock[1]/__add___2" -> "902 OSNet/Sequential[conv4]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_2"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"902 OSNet/Sequential[conv4]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_2" -> "904 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 32, 16, 8) \n0 -> 0", style=solid];
"903 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "904 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0"  [label="(128, 32, 1, 1) \n0 -> 1", style=solid];
"904 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFConv2d[conv]/conv2d_0" -> "905 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 128, 16, 8) \n0 -> 0", style=solid];
"905 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "906 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 128, 16, 8) \n0 -> 0", style=solid];
"906 OSNet/Sequential[conv4]/OSBlock[1]/Conv1x1Linear[conv3]/NNCFBatchNorm2d[bn]/SymmetricQuantizer/symmetric_quantize_0" -> "907 OSNet/Sequential[conv4]/OSBlock[1]/__add___3"  [label="(6, 128, 16, 8) \n0 -> 0", style=solid];
"907 OSNet/Sequential[conv4]/OSBlock[1]/__add___3" -> "908 OSNet/Sequential[conv4]/OSBlock[1]/relu_0"  [label="(6, 128, 16, 8) \n0 -> 0", style=solid];
"908 OSNet/Sequential[conv4]/OSBlock[1]/relu_0" -> "909 OSNet/Sequential[conv4]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_3"  [label="(6, 128, 16, 8) \n0 -> 0", style=solid];
"909 OSNet/Sequential[conv4]/OSBlock[1]/SymmetricQuantizer/symmetric_quantize_3" -> "911 OSNet/Conv1x1[conv5]/NNCFConv2d[conv]/conv2d_0"  [label="(6, 128, 16, 8) \n0 -> 0", style=solid];
"910 OSNet/Conv1x1[conv5]/NNCFConv2d[conv]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "911 OSNet/Conv1x1[conv5]/NNCFConv2d[conv]/conv2d_0"  [label="(128, 128, 1, 1) \n0 -> 1", style=solid];
"911 OSNet/Conv1x1[conv5]/NNCFConv2d[conv]/conv2d_0" -> "912 OSNet/Conv1x1[conv5]/NNCFBatchNorm2d[bn]/batch_norm_0"  [label="(6, 128, 16, 8) \n0 -> 0", style=solid];
"912 OSNet/Conv1x1[conv5]/NNCFBatchNorm2d[bn]/batch_norm_0" -> "913 OSNet/Conv1x1[conv5]/ReLU[relu]/relu__0"  [label="(6, 128, 16, 8) \n0 -> 0", style=solid];
"913 OSNet/Conv1x1[conv5]/ReLU[relu]/relu__0" -> "914 OSNet/Conv1x1[conv5]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 128, 16, 8) \n0 -> 0", style=solid];
"914 OSNet/Conv1x1[conv5]/ReLU[relu]/SymmetricQuantizer/symmetric_quantize_0" -> "915 OSNet/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0"  [label="(6, 128, 16, 8) \n0 -> 0", style=solid];
"915 OSNet/AdaptiveAvgPool2d[global_avgpool]/adaptive_avg_pool2d_0" -> "916 OSNet/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0"  [label="(6, 128, 1, 1) \n0 -> 0", style=solid];
"916 OSNet/AdaptiveAvgPool2d[global_avgpool]/SymmetricQuantizer/symmetric_quantize_0" -> "917 OSNet/view_0"  [label="(6, 128, 1, 1) \n0 -> 0", style=solid];
"917 OSNet/view_0" -> "919 OSNet/Sequential[fc]/NNCFLinear[0]/linear_0"  [label="(6, 128) \n0 -> 0", style=solid];
"918 OSNet/Sequential[fc]/NNCFLinear[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize_0" -> "919 OSNet/Sequential[fc]/NNCFLinear[0]/linear_0"  [label="(512, 128) \n0 -> 1", style=solid];
"919 OSNet/Sequential[fc]/NNCFLinear[0]/linear_0" -> "920 OSNet/Sequential[fc]/NNCFBatchNorm1d[1]/batch_norm_0"  [label="(6, 512) \n0 -> 0", style=solid];
"920 OSNet/Sequential[fc]/NNCFBatchNorm1d[1]/batch_norm_0" -> "921 OSNet/Sequential[fc]/ReLU[2]/relu__0"  [label="(6, 512) \n0 -> 0", style=solid];
"921 OSNet/Sequential[fc]/ReLU[2]/relu__0" -> "922 /nncf_model_output_0"  [label="(6, 512) \n0 -> 0", style=solid];
}
